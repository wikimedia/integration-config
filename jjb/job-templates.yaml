# CI for gerrit
- job:
    name: 'gerrit-docker'
    node: Docker
    wrappers:
      # needs to be 1 hour and 30 mins to give gerrit enough time to build.
      # It can sometimes take a while.
      - timeout:
          timeout: 90
          fail: true
      - timestamps
      - credentials-binding:
          - text:
              credential-id: composer-github-oauthtoken
              variable: COMPOSER_GITHUB_OAUTHTOKEN
    triggers:
     - zuul
    builders:
      - docker-castor-load
      - docker-src-dir
      - docker-log-dir
      # .gitsubmodules uses relative url, we need to point to upstream gerrit
      # repository to fetch them.
      - docker-ci-src-setup:
          submodules: false
      - docker-run-with-log-cache-src:
          image: docker-registry.wikimedia.org/releng/ci-src-setup-simple:0.4.2-s1
          options: --entrypoint=git
          args: >
              -c remote.origin.url=https://gerrit.googlesource.com/gerrit
              submodule update --init --recursive
      - docker-run-with-log-cache-src:
          image: 'docker-registry.wikimedia.org/releng/gerrit:0.1.1'
          options: '--volume /srv/git:/srv/git:ro'
          # Build various `.war` targets:
          # - gerrit: only core
          # - withdocs: core + doc
          # - release: core + doc + plugins
          args: gerrit withdocs release
    publishers:
      - archive:
         artifacts: >
           log/execroot/*/bazel-out/k8-fastbuild/bin/*.war,
           log/execroot/*/bazel-out/k8-fastbuild/bin/plugins/core.zip,
      - castor-save-workspace-cache
      - docker-cleanup

- job-template: &job_template_maven-java8-docker
    name: '{name}-maven-java8-docker'
    node: Docker
    docker_image_var: docker-registry.wikimedia.org/releng/maven-java8:1.0.0
    triggers:
        - zuul
    maven_args: 'clean verify'
    builders:
        - docker-castor-load
        - docker-log-dir
        - docker-run-with-log-and-workspace-cache:
            options: '{obj:docker_run_options|}'
            image: '{obj:docker_image_var}'
            args: '{obj:maven_args}'
    publishers:
        - archive-log-allow-empty
        - castor-save-workspace-cache
        - docker-cleanup
    wrappers:
      - timeout:
          timeout: '{timeout|30}'
          fail: true
      - timestamps
      - credentials-binding:
          - text:
              credential-id: composer-github-oauthtoken
              variable: COMPOSER_GITHUB_OAUTHTOKEN

# Convenience alias with name/project variables
- job-template:
    !!merge : *job_template_maven-java8-docker
    name: '{name}-{project}-maven-java8-docker'
    # Reinject Zuul parameters since JJB strip for some reason
    triggers:
     - zuul

# Generate project documentation using docker and publish it
- job-template:
    name: '{name}-docker-doc-publish'
    node: Docker
    concurrent: false
    triggers:
     - zuul
    builders:
     - docker-cache-dir
     - docker-log-dir
     - docker-src-dir
     - docker-ci-src-setup-simple
     - docker-run-with-log-cache-src:
         image: '{image}'
         args: '{obj:args|}'
         options: >-
           --workdir /src
     - doc-publish:
        docsrc: '{docsrc}'
        docdest: '{docdest}'
    publishers:
     - archive-log-allow-empty
     - docker-cleanup

# Same as '{name}-maven-java8-docker' but src is bindmounted so we can later
# retrieve the site from /src/target/ and push it to doc.wikimedia.org
- job-template: &job_template_maven-java8-docker-site-publish
    name: '{name}-maven-java8-docker-site-publish'
    node: Docker
    concurrent: false
    docker_image_var: docker-registry.wikimedia.org/releng/maven-java8:1.0.0
    triggers:
        - zuul
    builders:
        - docker-castor-load
        - docker-log-dir
        - docker-src-dir
        # It is a two steps process. clean install then site site:stage - T208496
        - docker-run-with-log-cache-src:
            image: '{obj:docker_image_var}'
            args: 'clean install'
        - docker-run-with-log-cache-src:
            image: '{obj:docker_image_var}'
            # Bypass CI fetch/checkout which would discard material from the install stage
            options: '--entrypoint=/usr/local/bin/mvn'
            args: 'site site:stage'
        - docker-run-with-log-cache-src:
            # The template uses maven-java8 but Sonar scanner requires Java 11
            image: 'docker-registry.wikimedia.org/releng/sonar-scanner:1.0.1'
            # Bypass the default entry point and invoke sonar directly
            # Do make sure to not discard the build artifacts from previous step.
            options: '--entrypoint=/usr/local/bin/mvn --workdir=/src'
            # Sonar analysis requires the sonarcloud API key to be present in the SONAR_API_KEY environment variable
            args: 'sonar:sonar'
    wrappers:
      - timeout:
          timeout: '{timeout|30}'
          fail: true
      - timestamps
      - credentials-binding:
          # SONAR_API_KEY is in Jenkins credentials store
          # https://integration.wikimedia.org/ci/credentials/
          - text:
              credential-id: SONAR_API_KEY
              variable: SONAR_API_KEY
          - text:
              credential-id: composer-github-oauthtoken
              variable: COMPOSER_GITHUB_OAUTHTOKEN
    publishers:
        - postbuildscript:
              builders:
                - build-steps:
                    - doc-publish:
                        docsrc: 'src/target/staging'
                        docdest: '{name}'
        - archive-log-allow-empty
        - castor-save-workspace-cache
        - docker-cleanup

- job-template:
    name: '{name}-{project}-maven-java8-docker-site-publish'
    !!merge : *job_template_maven-java8-docker-site-publish
    triggers:
        - zuul
    publishers:
        - postbuildscript:
              builders:
                - build-steps:
                    - doc-publish:
                        docsrc: 'src/target/staging'
                        docdest: '{name}-{project}'
        - archive-log-allow-empty
        - castor-save-workspace-cache
        - docker-cleanup

- job-template:
    name: '{name}-maven-release-docker'
    node: Docker
    concurrent: false
    parameters:
      - string:
          name: 'ZUUL_URL'
          default: 'https://{git-user}@gerrit.wikimedia.org/r'
          description: >
              Base URL to clone the repository from.
              HTTPS credentials for Gerrit are injected by Jenkins'
      - string:
          name: 'ZUUL_PROJECT'
          default: '{release-project}'
          description: 'The Gerrit project to clone'
      - string:
          name: 'ZUUL_REF'
          default: '{release-branch}'
          description: 'A git reference to fetch. Used by "git fetch"'
      - string:
          name: 'ZUUL_BRANCH'
          default: '{release-branch}'
          description: 'Name of the local branch to checkout to'
    wrappers:
      # Credentials for Gerrit
      - credentials-binding:
          - file:
              credential-id: maven-release-user-netrc
              variable: NETRC_FILE
      # Credentials for Archiva
      - config-file-provider:
          files:
              - file-id: 'org.jenkinsci.plugins.configfiles.maven.MavenSettingsConfig.ArchivaCredentialsSettings'
                target: archiva-credentials.xml
      - timeout:
          timeout: 30
          fail: true
      - timestamps
    builders:
      - docker-castor-load
      - docker-log-dir
      # The config-file-provider has the file created by the jenkins-slave and
      # respecting umask. It is thus not readable by the nobody user in the
      # container. setfacl lets us grant an extra permission.
      # Credentials binding makes it readable solely by the jenkins-slave user.
      - shell: |
          setfacl -m user:65534:r archiva-credentials.xml $NETRC_FILE
      - docker-run-with-log-and-workspace-cache:
          options: >-
              -v "$NETRC_FILE":/nonexistent/.netrc:ro
              -v "$WORKSPACE/archiva-credentials.xml":/archiva-credentials.xml
              -e GIT_AUTHOR_NAME="{git-user}"
              -e GIT_COMMITTER_NAME="{git-user}"
              -e EMAIL="{git-user-email}"
          image: docker-registry.wikimedia.org/releng/maven-java8:1.0.0
          args: >-
              -Dresume=false
              -Djdk.net.URLClassPath.disableClassPathURLCheck=true
              -Duser.name='{git-user}'
              -DdeveloperConnection="scm:git:$ZUUL_URL/$ZUUL_PROJECT"
              --settings /archiva-credentials.xml
              release:prepare release:perform -Darguments=-Dgpg.skip=true
    publishers: '{publishers}'

- job-template: &job_npm-node-6-docker
    name: 'npm-node-6-docker'
    node: Docker
    docker_image_var: 'docker-registry.wikimedia.org/releng/npm-test:0.7.1-s1'
    docker_run_options_var: ''
    triggers:
     - zuul
    builders:
     - docker-castor-load
     - docker-src-dir
     - docker-log-dir
     - docker-ci-src-setup-simple
     - docker-run-with-log-cache-src:
        options: '{obj:docker_run_options_var}'
        image: '{obj:docker_image_var}'
    publishers:
     - archive-log-allow-empty
     - castor-save-workspace-cache
     - docker-cleanup

# Node.js 10 job for 'npm install-test'
- job-template:
    name: '{name}-node10-docker'
    node: Docker
    triggers:
     - zuul
    properties:
        - build-discarder:
            days-to-keep: 7
    builders:
     - docker-castor-load
     - docker-src-dir
     - docker-log-dir
     - docker-ci-src-setup-simple
     - docker-run-with-log-cache-src:
        image: 'docker-registry.wikimedia.org/releng/node10-test:0.6.1-s2'
    publishers:
     - archive-log-allow-empty
     - castor-save-workspace-cache
     - docker-cleanup

# Node.js 10 job for 'npm install & npm run {script}'
- job-template:
    name: '{name}-node10-run{script}-docker'
    node: Docker
    triggers:
     - zuul
    builders:
     - docker-castor-load
     - docker-src-dir
     - docker-log-dir
     - docker-ci-src-setup-simple
     - docker-run-with-log-cache-src:
        image: 'docker-registry.wikimedia.org/releng/node10-test:0.6.1-s2'
        args: '{script}'
    publishers:
     - archive-log-allow-empty
     - castor-save-workspace-cache
     - docker-cleanup

- job-template:
    name: '{name}-node10-npmaudit-docker'
    node: Docker
    triggers:
     - zuul
    builders:
     - docker-src-dir
     - docker-log-dir
     - docker-ci-src-setup-simple
     - docker-run-with-log-cache-src:
        image: 'docker-registry.wikimedia.org/releng/node10:0.5.2-s2'
        options: '--workdir="/src"'
        args: 'audit'
    publishers:
     - docker-cleanup

- job-template:
    name: '{name}-daily-node10-npmaudit-docker'
    node: Docker
    triggers:
    - timed: '@daily'
    parameters:
        - string:
              name: 'ZUUL_PROJECT'
              default: '{repository}'
        - string:
              name: 'ZUUL_REF'
              default: 'master'
        - string:
              name: 'ZUUL_URL'
              default: 'https://gerrit.wikimedia.org/r/p/'
        - string:
              name: 'NPM_CONFIG_cache'
              default: '/cache'
    builders:
    - docker-cache-dir
    - docker-src-dir
    - docker-log-dir
    - docker-ci-src-setup-simple
    - docker-run-with-log-cache-src:
        image: 'docker-registry.wikimedia.org/releng/node10:0.5.2-s2'
        options: '--workdir="/src"'
        args: 'audit'
    publishers:
    - docker-cleanup

# Node.js 10 job for 'npm install-test' (with browsers installed)
- job-template:
    name: '{name}-node10-browser-docker'
    node: Docker
    triggers:
     - zuul
    builders:
     - docker-castor-load
     - docker-src-dir
     - docker-log-dir
     - docker-ci-src-setup-simple
     - docker-run-with-log-cache-src:
        image: 'docker-registry.wikimedia.org/releng/node10-test-browser:0.6.0-s1' # XXX pin due to T240955
    publishers:
     - archive-log-allow-empty
     - castor-save-workspace-cache
     - docker-cleanup

# Node.js 10 job for 'npm install-test' (with browser installed)
# and publishing /coverage from workspace
# to doc.wikimedia.org/cover/:DOC_PROJECT
- job:
    name: 'generic-node10-browser-coverage-docker-publish'
    node: Docker
    triggers:
     - zuul
    builders:
     - docker-castor-load
     - docker-src-dir
     - docker-log-dir
     - docker-ci-src-setup-simple
     - docker-run-with-log-cache-src:
        image: 'docker-registry.wikimedia.org/releng/node10-test-browser:0.6.3-s2'
     - cover-publish:
        src: 'src/coverage'
        dest: '$DOC_PROJECT'
    publishers:
     - docker-cleanup

# Node.js 10 job for 'npm install & npm run doc'
# Publishing workspace/docs to doc.wikimedia.org/:DOC_PROJECT/:DOC_SUBPATH/
# - DOC_PROJECT: determined in parameter_functions.py (repo name)
# - DOC_SUBPATH: determined in parameter_functions.py (branch or tag)
- job:
    name: generic-node10-docs-docker-publish
    node: Docker
    triggers:
     - zuul
    builders:
     - docker-castor-load
     - docker-src-dir
     - docker-log-dir
     - docker-ci-src-setup-simple
     - docker-run-with-log-cache-src:
        image: 'docker-registry.wikimedia.org/releng/node10-test:0.6.1-s2'
        args: 'doc'
     - doc-publish:
        docsrc: 'src/docs'
        docdest: '$DOC_PROJECT/$DOC_SUBPATH'
    publishers:
     - castor-save-workspace-cache
     - docker-cleanup
# Publishing workspace/docs to doc.wikimedia.org/:DOC_PROJECT/:DOC_SUBPATH/js/
# - DOC_PROJECT: determined in parameter_functions.py (mw extension name)
# - DOC_SUBPATH: determined in parameter_functions.py (branch or tag)
- job:
    name: mwext-node10-docs-docker-publish
    node: Docker
    triggers:
     - zuul
    builders:
     - docker-castor-load
     - docker-src-dir
     - docker-log-dir
     - docker-ci-src-setup-simple
     - docker-run-with-log-cache-src:
        image: 'docker-registry.wikimedia.org/releng/node10-test:0.6.1-s2'
        args: 'doc'
     - doc-publish:
        docsrc: 'src/docs'
        docdest: '$DOC_PROJECT/$DOC_SUBPATH/js'
    publishers:
     - castor-save-workspace-cache
     - docker-cleanup

- project:
    name: 'generic'
    jobs:
        - '{name}-node10-docker'
        - '{name}-node10-browser-docker'
        - '{name}-node10-npmaudit-docker'
        - '{name}-node10-run{script}-docker':
           script: 'doc'

# Same as 'generic', but kept separate so that gate-and-submit jobs
# don't cross-block between mediawiki/* and non-mediawiki changes.
- project:
    name: 'mwext'
    jobs:
        - '{name}-node10-run{script}-docker':
           script: 'doc'

- job-template:
    !!merge : *job_npm-node-6-docker
    name: '{name}-npm-node-6-docker'
    # Reinject Zuul parameters since JJB strip for some reason
    triggers:
     - zuul

# Variant for MediaWiki services /deploy repos
# We only need to install devDependencies, and use a different entry point
- job-template:
    !!merge : *job_npm-node-6-docker
    name: '{name}-deploy-npm-node-6-docker'
    docker_image_var: 'docker-registry.wikimedia.org/releng/npm-test:0.7.1-s1'
    docker_run_options_var: '--entrypoint=/run-oid.sh'
    triggers:
     - zuul

- job-template: &job_npm-run-script-node-6-docker
    !!merge : *job_npm-node-6-docker
    name: '{name}-npm-run-{script}-node-6-docker'
    docker_run_options_var: ''
    # Reinject Zuul parameters since JJB strip for some reason
    triggers:
     - zuul
    builders:
     - docker-castor-load
     - docker-src-dir
     - docker-log-dir
     - docker-ci-src-setup-simple
     - docker-run-with-log-cache-src:
        options: '{obj:docker_run_options_var}'
        image: '{obj:docker_image_var}'
        args: '{script}'


# Variant for MediaWiki services /deploy repos
- job-template:
    !!merge : *job_npm-run-script-node-6-docker
    name: '{name}-deploy-npm-run-{script}-node-6-docker'
    # Reinject Zuul parameters since JJB strip for some reason
    triggers:
     - zuul
    docker_image_var: 'docker-registry.wikimedia.org/releng/npm-test:0.7.1-s1'
    docker_run_options_var: '--entrypoint=/run-oid.sh'

- job-template:
    !!merge : *job_npm-node-6-docker
    name: '{name}-npm-browser-node-6-docker'
    docker_image_var: 'docker-registry.wikimedia.org/releng/npm-browser-test:0.5.1-s2'
    # Reinject Zuul parameters since JJB strip for some reason
    triggers:
     - zuul

- job-template:
    !!merge : *job_npm-run-script-node-6-docker
    name: 'selenium-daily-{sitename}-{project}'
    docker_image_var: 'docker-registry.wikimedia.org/releng/node10-test-browser:0.6.3-s2'
    triggers:
     - timed: '@daily'
    parameters:
        - string:
            name: 'MEDIAWIKI_USER'
            default: 'Selenium user'
        - string:
            name: 'MW_SERVER'
            default: '{mw_server}'
        - string:
            name: 'ZUUL_BRANCH'
            default: 'master'
        - string:
            name: 'ZUUL_PIPELINE'
            default: 'postmerge'  # to force saving npm cache with castor
        - string:
            name: 'ZUUL_PROJECT'
            default: '{repository}'
        - string:
            name: 'ZUUL_REF'
            default: 'master'
        - string:
            name: 'ZUUL_URL'
            default: 'https://gerrit.wikimedia.org/r/p/'
    builders:
     - docker-castor-load
     - docker-src-dir
     - docker-log-dir
     - docker-ci-src-setup-simple
     - docker-run-with-log-cache-src:
        options: '--env LOG_DIR=/log --entrypoint=/run-with-xvfb.sh'
        image: '{obj:docker_image_var}'
        args: 'selenium-daily'
    wrappers:
      - timeout:
          timeout: 30
      - timestamps
      # Wiki usernames and passwords are hold in Jenkins credentials store
      # https://integration.wikimedia.org/ci/credential-store/domain/selenium/
      - credentials-binding:
          - text:
              credential-id: selenium-user-beta
              variable: MEDIAWIKI_PASSWORD
          - text:
              credential-id: composer-github-oauthtoken
              variable: COMPOSER_GITHUB_OAUTHTOKEN
    publishers:
     - archive-log-allow-empty
     - castor-save-workspace-cache
     - junit:
         results: 'log/junit*.xml,log/WDIO.xunit*.xml'
         # We do not have any JUnit files when all tests pass
         allow-empty-results: true
     - email-ext:
        recipients: '{recipients}'
        body: '${{SCRIPT, template="wikimedia.template"}}'
        failure: true
        unstable: true
     - docker-cleanup
