# Contains any jobs related to the beta cluster.
#
# Beta is a cluster meant to reproduce the production environnement out of virtual instances in the
# Wikimedia labs.  We use Jenkins job to maintain some recurring tasks such as running the MediaWiki
# database schema updates.
#
# Jobs should be tied to the deployment-deploy* host defined in Jenkins. They will run as the
# `jenkins-deploy` user on that instance.  To create a new job simply use the provided default
# which would take care of the basic configuration.
#
# Example:
#
#  - job:
#    name: beta-myawesomeness
#    defaults: beta
#    <your stuff there>

# Basic valid defaults, making sure we run on the deployment-deploy* host
# slave nodes which is in labs.
- defaults:
    name: beta
    description: |
      <p>Job is managed by <a href="https://www.mediawiki.org/wiki/CI/JJB">Jenkins Job Builder</a>.</p>
    project-type: freestyle

    wrappers:
      - timeout:
          timeout: 30
          fail: true
      - timestamps
      - credentials-binding:
          - text:
              credential-id: composer-github-oauthtoken
              variable: COMPOSER_GITHUB_OAUTHTOKEN

# Job to run MediaWiki update.php script on all the beta wikis.
#
# Set TMPDIR to point to the tmpfs if it exists.
- job:
    name: beta-update-databases-eqiad
    defaults: beta
    node: BetaClusterBastion

    builders:
      - shell: |
          # Setup tmpfs directory
          export TMPDIR_FS="/srv/home/jenkins-deploy/tmpfs/jenkins-${EXECUTOR_NUMBER}"
          if [ -d "/srv/home/jenkins-deploy/tmpfs" ]; then
            mkdir -p "$TMPDIR_FS"
            chmod 777 "$TMPDIR_FS"
            export TMPDIR="$TMPDIR_FS"
          fi
          # Teardown tmpfs directory
          function global_teardown() {
              rm -rf "$TMPDIR_FS"
          }
          trap global_teardown EXIT

          /usr/local/bin/wmf-beta-update-databases.py

    publishers:
      - beta-irc

    wrappers:
      - timestamps
      - timeout:
          timeout: 45
      - credentials-binding:
          - text:
              credential-id: composer-github-oauthtoken
              variable: COMPOSER_GITHUB_OAUTHTOKEN

    # We do not have a good way to detect databases modifications, so just spam
    # the beta cluster with update requests.
    triggers:
     - timed: '@hourly'

    properties:
     - build-discarder:
         days-to-keep: 15

# Job updating MediaWiki core+extensions code
- job:
    name: beta-code-update-eqiad
    defaults: beta
    description: |
      This job updates deployment-deploy04 automatically every ten minutes. It
      updates the MediaWiki core/extensions/skins code and the configuration to
      the latest versions from git using "scap prep auto". Then it triggers the
      beta-scap-sync-world job to run "scap sync-world" to deploy the changes.
    node: BetaClusterBastion

    # Do not run concurrently with the downstream job
    block-downstream: true

    properties:
     - build-discarder:
         days-to-keep: 7

    triggers:
     # Every ten minutes:
     - timed: 'H/10 * * * *'

    builders:
      - shell: /usr/bin/scap prep auto

    publishers:
      - beta-irc
      - email-ext:
          recipients: qa-alerts@lists.wikimedia.org betacluster-alerts@lists.wikimedia.org
          attach-build-log: false
          first-failure: true
          aborted: true
          failure: false
          fixed: true
      - trigger:
          project: beta-scap-sync-world

- job:
    name: beta-scap-sync-world
    defaults: beta
    description: |
      Runs "/usr/bin/scap sync-world" as jenkins-deploy on deployment-deploy04
    node: BetaClusterBastion

    # Do not run concurrently with upstream jobs
    block-upstream: true

    builders:
      - shell: |
          LOCKFILE="/var/lock/scap.operations_mediawiki-config.lock"
          if [ -O "$LOCKFILE" ]; then
            rm "$LOCKFILE"
          fi

          # scap/sh closes blindly close all potentially available file
          # descriptors. With one million of them, that slow down each command
          # execution by 240 ms. T204762
          ulimit -n 512

          # For the record
          /usr/bin/scap version

          /usr/bin/scap sync-world "$JOB_NAME (build $BUILD_DISPLAY_NAME)"

    properties:
     - build-discarder:
         days-to-keep: 7

    wrappers:
      - timestamps
      - timeout:
          timeout: 60
      - credentials-binding:
          - text:
              credential-id: composer-github-oauthtoken
              variable: COMPOSER_GITHUB_OAUTHTOKEN

    publishers:
      - beta-irc
      - email-ext:
          recipients: qa-alerts@lists.wikimedia.org betacluster-alerts@lists.wikimedia.org
          content-type: 'html'
          attach-build-log: false
          aborted: true
          failure: true
          fixed: true

# Also used in mediawiki-core-code-coverage
- publisher:
    name: beta-irc
    publishers:
      - ircbot:
          strategy: failure-and-fixed
          notify-start: false
          notify-committers: false
          notify-culprits: false
          notify-upstream: false
          notify-fixers: false
          message-type: summary
          matrix-notifier: only-parent
          channels:
              - name: '#wikimedia-releng'
                notify-only: true

- view:
    name: Beta
    view-type: list
    description: Jobs related to the beta cluster.
    filter-executors: true
    filter-queue: true
    job-name:
        - beta-code-update-eqiad
        - beta-scap-sync-world
        - beta-update-databases-eqiad
    columns:
        - status
        - weather
        - job
        - last-success
        - last-failure
        - last-duration
        - build-button
