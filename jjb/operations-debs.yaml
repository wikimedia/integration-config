# Jobs to build a Debian package using the set of shell scripts from
# http://jenkins-debian-glue.org/
#
# Merely a very useful wrapper / set of conventions around cowbuilder which on
# CI agents are setup via the puppet module package_builder.
#
# Packages are build against the distribution mentionned in debian/changelog
# and we recognize the -wikimedia flavor such as 'jessie-wikimedia'.
#
# See upstream:
#    http://jenkins-debian-glue.org/docs/
#    https://github.com/mika/jenkins-debian-glue/tree/master/scripts

# Lintian checks packages for common errors. Generate a JUnit report that is
# then consumed by Jenkins Junit publisher plugin.
#
# https://lintian.debian.org/
- builder:
    name: debian-glue-lintian
    builders:
      # We might consider adding --warnings
      # --skip-lintian comes from mika/lintian
      # https://github.com/mika/jenkins-debian-glue/commit/e2beae591bada6a91ffd33a45e6c7a451dc33c3a
      - shell: |
          suffix=.lintian.txt
          for x in *$suffix; do
            echo "Converting lintian file $x"
            # For human consumption when looking at the build console
            cat "$x"
            lintian-junit-report --skip-lintian --filename "$x" *.changes > "${x/$suffix/.lintian.xml}"
          done

# Piuparts test installation / removal of a package
#
# https://piuparts.debian.org/
#
- builder:
    name: debian-glue-piuparts
    builders:
      - shell: |
          DIST=$(dpkg-parsechangelog --show-field distribution -lsource/debian/changelog)
          echo "Distribution set from debian/changelog to $distribution"
          . /etc/pbuilderrc
          sudo distribution="$DIST" piuparts_wrapper "$PWD"/*.deb || true
          piuparts_tap piuparts.txt > piuparts.tap

#
# Generic job template around jenkins-debian-glue
#
- job-template: &job_template_debian_glue
    name: 'debian-glue'
    node: DebianGlue
    parameters:
      # Set a default in case someone trigger the job manually
      #
      # Value is passed by Zuul, and if missed fallback to the Jenkins globally
      # set value.
      - string:
          name: BUILD_TIMEOUT
          default: '30'
          description: 'Timeout in minutes.'
    wrappers:
      - timeout:
          timeout: '${{BUILD_TIMEOUT}}'
          fail: true
      - timestamps
      - credentials-binding:
          - text:
              credential-id: composer-github-oauthtoken
              variable: COMPOSER_GITHUB_OAUTHTOKEN
    triggers:
        - zuul
    builders:
        - shell: |
            echo "*** Nuking previous build source tree ***"

            # We clone from Gerrit to $WORKSPACE /source
            rm -fR source

            # Have to first clone from Gerrit to have all the branches
            # (debian/upstream/master...) to be at their proper tip. The git
            # repositories on the zuul-merger instances have their head set at
            # arbitrary merge commits.
            git clone https://gerrit.wikimedia.org/r/"$ZUUL_PROJECT" source

            # Fetch change from the zuul-merger and check it out
            git -C ./source fetch "$ZUUL_URL"/"$ZUUL_PROJECT" "+$ZUUL_REF:$ZUUL_REF"
            git -C ./source -c advice.detachedHead=false checkout FETCH_HEAD

        - shell: |
            # jenkins-debian-glue expects the job to be run with the Jenkins
            # git plugin which exposes metadata via GIT_ environement
            # variables.
            export GIT_COMMIT="$ZUUL_COMMIT"
            # generate-git-snapshot does a `git checkout -f "$GIT_BRANCH"`
            export GIT_BRANCH="$GIT_COMMIT"

            # Always build against the debian/changelog indicated distribution,
            # gives freedom to developers to pick the Distribution the package
            # will be build against.
            distribution="{distribution|}"
            if [ -n "$distribution" ]; then
                echo '*** Jenkins job sets distribution={distribution|} thus not parsing debian/changelog ***'
                if [[ "$distribution" =~ backports ]]; then
                    echo '*** Job distribution explicitly set to backport. Force backport versionning***'
                    FORCE_BACKPORT_VERSION=1
                fi
            else
                distribution=$(dpkg-parsechangelog --show-field distribution -lsource/debian/changelog)
                if [ "$distribution" == "UNRELEASED" ]; then
                    # Take the previous one - T181120
                    echo "Found distribution UNRELEASED, using previous release instead"
                    distribution=$(dpkg-parsechangelog  --show-field distribution --count 1 --offset 1 -lsource/debian/changelog)
                fi
                echo "*** Distribution set from debian/changelog to $distribution ***"

                if [[ ! "$distribution" =~ backports && -n "$BACKPORTS" ]]; then
                    echo '*** Non backport distribution but CI has set \$BACKPORTS. Force backport versionning***'
                    FORCE_BACKPORT_VERSION=1
                fi
            fi
            export distribution


            # FIXME would be for postmerge pipeline later on?
            if [ "$ZUUL_PIPELINE" == "gate-and-submit" ]; then
                export SKIP_DCH=true
            fi

            # Double curly braces are for JJB escaping.
            #
            # $distribution can not contain dashes since it is injected in
            # debian/changelog. Run the command in a subshell to avoid mangling
            # distribution/DIST.
            #
            # DIST is set to have the .changes Distribution field updated.
            # dpkg-genchanges always set it to the entry in debian/changelog
            # but we might have overriden it above. That requires
            # KEEP_SOURCE_CHANGES to be set which leaves behind a
            # _source.changes file.
            #
            # DEBEMAIL is to avoid lintian bogus-mail-host errors
            #
            # DCH_OPT is passed to `git dch`. FORCE_BACKPORT_VERSION change the
            # default logic to craft a "bpo" and "non snapshot" version. That
            # is to prevent the lintian error
            # `backports-upload-has-incorrect-version-number`
            (
                DIST="$distribution" \
                distribution=${{distribution//-/+}} \
                KEEP_SOURCE_CHANGES=1 \
                DEBEMAIL="jenkins-bot@wikimedia.org" \
                DCH_OPTS=${{FORCE_BACKPORT_VERSION:+--bpo --multimaint-merge --ignore-branch}} \
                    /usr/bin/generate-git-snapshot
            )

            # Skip repository setup
            # FIXME: later on we could have postmerge to publish the resulting
            # package to some kind of central repository by using REPOSITORY
            # and REPOS.
            export BUILD_ONLY=yes

            # We set DIST which is used by pbuilderrc to determine whether it a
            # Wikimedia flavor.  We point jenkins-debian-glue cowbuilder path
            # to the canonical image, ie have jessie-wikimedia to point to
            # base-jessie-amd64.cow and init hook
            #
            # Since $WIKIMEDIA is set, the hook will inject apt.wikimedia.org
            #
            # NOTE: build-and-provide-package invokes cowbuilder with sudo
            # which strips out every environment variables. They have to be
            # explicitly added to the allow list on Wikitech sudo policy at
            # https://wikitech.wikimedia.org/wiki/Special:NovaSudoer
            #
            # Example:
            #   env_keep+=distribution
            #
            export DIST=$distribution
            . /etc/pbuilderrc

            # Copy Wikimedia and Debian glue hooks under a common directory
            rm -fR pbuilder_hooks
            mkdir pbuilder_hooks
            cp /usr/share/jenkins-debian-glue/pbuilder-hookdir/* pbuilder_hooks/
            [ -d "$HOOKDIR" ] && cp "$HOOKDIR"/* pbuilder_hooks/
            export PBUILDER_HOOKDIR="$(pwd)/pbuilder_hooks/"

            export COWBUILDER_BASE="$BASEPATH"
            export BUILDRESULT="$WORKSPACE/binaries"
            export SKIP_COWBUILDER_UPDATE="true"

            # Prevent our C10shell out from opening a shell on build failure
            export SHELL_ON_FAILURE="no"

            # Use Wikimedia hooks provided by puppet ::package_builder but
            # override some settings such as BUILDRESULT
            #
            # See T141538
            echo "*** Overriding Wikimedia BUILDRESULT ***"
            cat /etc/pbuilderrc > job-pbuilderrc
            echo "BUILDRESULT=$BUILDRESULT" >> job-pbuilderrc

            echo "*** Overriding HOOKDIR ***"
            echo "HOOKDIR=$PBUILDER_HOOKDIR" >> job-pbuilderrc

            echo "*** Forcing colors in pbuilderrc ***"
            echo "USECOLORS=yes" >> job-pbuilderrc

            # Regression in Buster. Fixed in jenkins-debian-glue v0.20.1
            echo "ADDITIONAL_BUILDRESULTS+=(../*.lintian.txt)" >> job-pbuilderrc

            if [ "$WIKIMEDIA" == "yes" ]; then
                # Use lintian profile from the build host as provided by
                # package_builder puppet module. T186587
                export USER_BINDMOUNTS="/usr/share/lintian/profiles/wikimedia /usr/share/lintian/vendors/wikimedia"
                export LINTIAN_OPTIONS="--profile wikimedia"
            fi

            export PBUILDER_CONFIG="$WORKSPACE/job-pbuilderrc"
            export LINTIAN=true

            # Skip:
            # * signing (-sa)
            # * debian/rules clean, since we start from a fresh workspace
            export DEBBUILDOPTS="-sa -nc"
            # When setting DEBBUILDOPTS, jenkins-debian-glue requires
            # SKIP_ARCH_BUILD to be set
            export SKIP_ARCH_BUILD=false

            /usr/bin/build-and-provide-package
        # Linters
        - debian-glue-lintian
        # Piuparts does NOT run in cowbuilder which is source of false
        # positives, specially when the tar.gz is severly outdated
        # T141454 T148664
        #- debian-glue-piuparts
        - shell: |
            set -o pipefail
            jdg-debc | tee debc.txt
    publishers:
      - xunit:
          thresholdsmode: 'number'
          thresholds:
              - failed:
                  # Has to be set explicitly for "junit" type
                  failure: 0
          types:
              - phpunit:
                  pattern: '*lintian.xml'
      - archive:
          artifacts: '*.gz,*.bz2,*.xz,*.deb,*.dsc,*.buildinfo,*.changes,debc.txt,*lintian.txt,*lintian.xml,piuparts.txt,piuparts.tap'

- job-template:
    !!merge : *job_template_debian_glue
    name: 'debian-glue-non-voting'

# Zuul would inject DEB_BUILD_OPTIONS='nocheck'
- job-template:
    !!merge : *job_template_debian_glue
    name: 'debian-glue-nocheck'

# Alias jobs that would have BACKPORTS=yes injected by Zuul
- job-template:
    !!merge : *job_template_debian_glue
    name: 'debian-glue-backports'

- job-template:
    !!merge : *job_template_debian_glue
    name: 'debian-glue-backports-non-voting'

- job-template:
    !!merge : *job_template_debian_glue
    name: 'debian-glue-{distribution}'

- job-template:
    !!merge : *job_template_debian_glue
    name: 'debian-glue-{distribution}-non-voting'

- job-group:
    name: debian-glue-jobs-by-distributions
    distribution:
        # Debian
        - buster
        - unstable
    jobs:
        - 'debian-glue-{distribution}'
        - 'debian-glue-{distribution}-non-voting'

# PROJECTS
#
# FIXME later on that should be autogenerated for each postmerge job.
#
- project:
    name: debian-glue
    jobs:
        - 'debian-glue'
        - 'debian-glue-nocheck'
        - 'debian-glue-non-voting'
        - 'debian-glue-backports'
        - 'debian-glue-backports-non-voting'
        - 'debian-glue-jobs-by-distributions'
