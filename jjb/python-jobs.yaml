- publisher:
    name: archive-tox-logs
    publishers:
     - archive:
         artifacts: '**/.tox/*/log/*.log,**/.tox/log/*'

- job-template: &job_tox-docker
    name: 'tox-docker'
    node: Docker
    docker_image_var: docker-registry.wikimedia.org/releng/tox-buster:0.6.1
    triggers:
        - zuul
    builders:
        - docker-castor-load
        - docker-log-dir
        - docker-src-dir
        - docker-run-with-log-cache-src:
            image: '{obj:docker_image_var}'
    wrappers:
      - timeout:
          timeout: '{obj:build_timeout|20}'  # minutes
      - timestamps
      - credentials-binding:
          - text:
              credential-id: composer-github-oauthtoken
              variable: COMPOSER_GITHUB_OAUTHTOKEN
    publishers:
        - archive-log-dir
        - castor-save-workspace-cache
        - docker-cleanup

- job-template:
    !!merge : *job_tox-docker
    name: '{name}-tox-docker'
    triggers:
        - zuul

- job-template:
    !!merge : *job_tox-docker
    name: 'tox-poetry-docker'
    docker_image_var: docker-registry.wikimedia.org/releng/tox-poetry-buster:0.0.3
    triggers:
        - zuul

- job-template:
    !!merge : *job_tox-docker
    name: '{name}-tox-docker-with-sonar'
    sonar_args: ''
    triggers:
        - zuul
    builders:
        - docker-castor-load
        - docker-log-dir
        - docker-src-dir
        - docker-run-with-log-cache-src:
              image: '{obj:docker_image_var}'

        # The branch holding the patch is named $ZUUL_BRANCH
        #
        # For patch analysis, we need to match sonar.branch.name parameter
        # which is set to {branch} which is the change number + the patchset.
        - docker-run-with-log-cache-src:
              image: '{obj:docker_image_var}'
              entrypoint: git
              args: 'branch -m "$ZUUL_CHANGE-$ZUUL_PATCHSET"'
        # The comparison is done against sonar.branch.target which is
        # $ZUUL_BRANCH, make it point to the previous patchset.
        - docker-run-with-log-cache-src:
              image: '{obj:docker_image_var}'
              entrypoint: git
              args: 'checkout -B $ZUUL_BRANCH FETCH_HEAD^'

        # Set working copy back to branch holding the patch
        - docker-run-with-log-cache-src:
              image: '{obj:docker_image_var}'
              entrypoint: git
              args: 'checkout "$ZUUL_CHANGE-$ZUUL_PATCHSET"'

        - docker-run-with-log-cache-src:
              image: docker-registry.wikimedia.org/releng/sonar-scanner:4.6.0.2311-3
              entrypoint: /run.sh
              workdir: /src
              args: '{sonar_args}'

    wrappers:
    - timeout:
        timeout: '{obj:build_timeout|20}'  # minutes
    - credentials-binding:
        - text:
            credential-id: SONAR_API_KEY
            variable: SONAR_API_KEY

- job-template:
    !!merge : *job_tox-docker
    name: '{name}-tox-{toxenv}-docker'
    triggers:
        - zuul
    builders:
        - docker-castor-load
        - docker-log-dir
        - docker-src-dir
        - docker-run-with-log-cache-src:
            image: '{obj:docker_image_var}'
            args: '-e "{toxenv}"'

# Call tox env 'docvenv' (default: 'doc' to generate documentation in labs and
# publish to doc.wikimedia.org using an intermediate rsync repository in labs.
# Intended for changes being merged, eg in 'postmerge'
- job-template:
    name: '{name}-tox-publish'
    node: Docker
    concurrent: false
    docker_image_var: docker-registry.wikimedia.org/releng/tox-buster:0.6.1
    triggers:
     - zuul
    builders:
     - docker-castor-load
     - docker-log-dir
     - docker-src-dir
     - docker-run-with-log-cache-src:
         image: '{obj:docker_image_var}'
         args: '-e "{obj:docenv|doc}"'
     - doc-publish:
        docsrc: 'src/{docsrc}'
        docdest: '{docdest}'
    publishers:
     - castor-save-workspace-cache
     - archive-log-dir
     - docker-cleanup

# Same but for ref-update, eg in 'publish'
- job-template:
    name: '{name}-tox-tag-publish'
    node: Docker
    concurrent: false
    docker_image_var: docker-registry.wikimedia.org/releng/tox-buster:0.6.1
    triggers:
     - zuul-post
    builders:
    # No cache restore/save (castor) for tags
     - docker-log-dir
     - docker-src-dir
     - docker-run-with-log-cache-src:
         image: '{obj:docker_image_var}'
         args: '-e "{obj:docenv|doc}"'
     - doc-publish:
        docsrc: 'src/{docsrc}'
        docdest: '{docdest}'
    publishers:
     - archive-log-dir
     - docker-cleanup

# Publish jobs for merged changes and tags
- job-group:
    name: 'tox-publish-jobs'
    jobs:
        - '{name}-tox-publish'
        - '{name}-tox-tag-publish'

- job:
    name: 'tox-py37-coverage-publish'
    node: Docker
    concurrent: false
    triggers:
        - zuul
    builders:
     - docker-castor-load
     - docker-log-dir
     - docker-src-dir
     - docker-run-with-log-cache-src:
         image: docker-registry.wikimedia.org/releng/tox-buster:0.6.1
         args: '-e py37 -- --cover-html --cover-html-dir=coverage/ --cover-xml --cover-xml-file=/log/coverage.xml'
     - docker-run-with-log-cache-src:
         image: docker-registry.wikimedia.org/releng/tox-buster:0.6.1
         entrypoint: /usr/bin/cobertura-clover-transform
         args: '/log/coverage.xml -o /log/clover.xml'
     - shell: |
         cp log/clover.xml src/coverage/clover.xml
     - cover-publish:
        src: 'src/coverage'
        dest: '$DOC_PROJECT'
    publishers:
        - castor-save-workspace-cache
        - archive-log-dir
        - docker-cleanup

- project:
    name: common-tox-jobs
    jobs:
     - tox-docker
     - tox-poetry-docker

- job:
    name: 'commit-message-validator'
    node: Docker
    triggers:
     - zuul
    builders:
     - docker-src-dir
     - docker-ci-src-setup-simple
     - docker-run:
        volumes:
            src:
        image: docker-registry.wikimedia.org/releng/commit-message-validator:1.0.0
    publishers:
     - docker-cleanup
