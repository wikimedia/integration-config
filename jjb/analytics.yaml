- publisher:
    name: irc-wikimedia-analytics
    publishers:
        - ircbot:
            notify-start: true
            message-type: summary
            channels:
                - name: '#wikimedia-analytics'
                  notify-only: true

- job-template:
    name: '{name}-maven-release-docker'
    node: Docker
    concurrent: false
    parameters:
      - string:
          name: 'ZUUL_URL'
          default: 'https://{git-user}@gerrit.wikimedia.org/r'
          description: >
              Base URL to clone the repository from.
              HTTPS credentials for Gerrit are injected by Jenkins'
      - string:
          name: 'ZUUL_PROJECT'
          default: '{release-project}'
          description: 'The Gerrit project to clone'
      - string:
          name: 'ZUUL_REF'
          default: '{release-branch}'
          description: 'A git reference to fetch. Used by "git fetch"'
      - string:
          name: 'ZUUL_BRANCH'
          default: '{release-branch}'
          description: 'Name of the local branch to checkout to'
    wrappers:
      # Credentials for Gerrit
      - credentials-binding:
          - file:
              credential-id: maven-release-user-netrc
              variable: NETRC_FILE
      # Credentials for Archiva
      - config-file-provider:
          files:
              - file-id: 'org.jenkinsci.plugins.configfiles.maven.MavenSettingsConfig.ArchivaCredentialsSettings'
                target: archiva-credentials.xml
      - timeout:
          timeout: 30
          fail: true
      - timestamps
    builders:
      - docker-castor-load
      - docker-log-dir
      # The config-file-provider has the file created by the jenkins-slave and
      # respecting umask. It is thus not readable by the nobody user in the
      # container. setfacl lets us grant an extra permission.
      # Credentials binding makes it readable solely by the jenkins-slave user.
      - shell: |
          setfacl -m user:65534:r archiva-credentials.xml $NETRC_FILE
      - docker-run-with-log-and-workspace-cache:
          options: >-
              -v "$NETRC_FILE":/nonexistent/.netrc:ro
              -v "$WORKSPACE/archiva-credentials.xml":/archiva-credentials.xml
              -e GIT_AUTHOR_NAME="{git-user}"
              -e GIT_COMMITTER_NAME="{git-user}"
              -e EMAIL="{git-user-email}"
          image: docker-registry.wikimedia.org/releng/maven-java8:1.0.0
          args: >-
              -Dresume=false
              -Djdk.net.URLClassPath.disableClassPathURLCheck=true
              -Duser.name='{git-user}'
              -DdeveloperConnection="scm:git:$ZUUL_URL/$ZUUL_PROJECT"
              --settings /archiva-credentials.xml
              release:prepare release:perform -Darguments=-Dgpg.skip=true
    publishers:
      - email-ext:
          recipients: '{recipient-emails}'
          reply-to: '{replyto-emails}'
          always: true
          content-type: text
          subject: Update on build $BUILD_TAG
          body: |
            The build $BUILD_NUMBER for $ZUUL_PROJECT has finished.
            See $BUILD_URL for details.
      - irc-wikimedia-analytics
      - docker-cleanup

- job-template:
    name: '{name}-update-jars-docker'
    node: Docker
    concurrent: false
    parameters:
      - string:
          name: 'ZUUL_URL'
          default: 'https://{git-user}@gerrit.wikimedia.org/r'
          description: >
              Base URL to clone the repository from.
              HTTPS credentials for Gerrit are injected by Jenkins'
      - string:
          name: 'ZUUL_PROJECT'
          default: '{jar-update-project}'
          description: 'The Gerrit project to clone'
      - string:
          name: 'ZUUL_REF'
          default: '{jar-update-branch}'
          description: 'A git reference to fetch. Used by "git fetch"'
      - string:
          name: 'ZUUL_BRANCH'
          default: '{jar-update-branch}'
          description: 'Name of the local branch to checkout to'
      - string:
          name: 'RELEASE_VERSION'
          description: 'Refinery source version to update jars for'

    wrappers:
      # Credentials for Gerrit
      - credentials-binding:
          - file:
              credential-id: maven-release-user-netrc
              variable: NETRC_FILE
      - timeout:
          timeout: 30
          fail: true
      - timestamps
    builders:
      - docker-src-dir
      - docker-log-dir
      - docker-ci-src-setup-simple
      # Create a git remote since ci-src-setup-simple only fetches
      - docker-run-with-log-cache-src:
          image: docker-registry.wikimedia.org/releng/jar-updater:0.0.7-s1
          options: --entrypoint=git
          args: remote add origin "https://gerrit.wikimedia.org/r/$ZUUL_PROJECT"
      # The config-file-provider has the file created by the jenkins-slave and
      # respecting umask. It is thus not readable by the nobody user in the
      # container. setfacl lets us grant an extra permission.
      # Credentials binding makes it readable solely by the jenkins-slave user.
      - shell: |
          setfacl -m user:65534:r $NETRC_FILE
      - docker-run-with-log-cache-src:
          options: >-
              -v "$NETRC_FILE":/nonexistent/.netrc:ro
              -e GIT_AUTHOR_NAME="{git-user}"
              -e GIT_COMMITTER_NAME="{git-user}"
              -e EMAIL="{git-user-email}"
          image: docker-registry.wikimedia.org/releng/jar-updater:0.0.7-s1
          args: >-
              -v "$RELEASE_VERSION"
              -u '{git-user}'
              -b "$ZUUL_BRANCH"
              -m 'review'
    publishers:
      - email-ext:
          recipients: '{recipient-emails}'
          reply-to: '{replyto-emails}'
          always: true
          failure: false
          content-type: text
          subject: Update on build $BUILD_TAG
          body: |
            The build $BUILD_NUMBER for $GIT_PROJECT has finished.
            See $BUILD_URL for details.
      - irc-wikimedia-analytics
      - archive-log-allow-empty
      - docker-cleanup

- project:
    name: 'analytics-refinery'
    git-user: maven-release-user
    git-user-email: maven-release-user@wikimedia.org
    git-user-id: maven-release-user
    release-project: analytics/refinery/source
    release-branch: master
    recipient-emails: analytics-alerts@wikimedia.org
    replyto-emails: analytics-alerts@wikimedia.org
    jar-update-project: analytics/refinery
    jar-update-branch: master

    jobs:
     - '{name}-maven-release-docker'
     - '{name}-maven-java8-docker'
     - '{name}-update-jars-docker'

- job:
    name: 'analytics-wikistats'
    node: Docker
    triggers:
        - zuul
    builders:
        - docker-src-dir
        - docker-ci-src-setup-simple
        #--- squids directory has been replaced with an older version that
        # does not come with tests. So we cannot run tests it the squids
        # folder for now.
        #                                    (qchris@2014-04-16)
        #
        #(cd squids && prove -v -Iperl/ t/)
        - docker-run:
            options:
                --volume "$(pwd)"/src:/src
                --workdir /src/pageviews_reports
                --entrypoint=/usr/bin/prove
            image: 'docker-registry.wikimedia.org/releng/perl:5.24.1-s3'
            args: '-v -Ilib/ t/'
    publishers:
        - docker-cleanup


# wikimedia-event-utilities is a standalone Java library
# for working with event streams in WMF production.
- project:
    name: 'wikimedia-event-utilities'
    git-user: maven-release-user
    git-user-email: maven-release-user@wikimedia.org
    git-user-id: maven-release-user
    release-project: wikimedia-event-utilities
    release-branch: master
    recipient-emails: analytics-alerts@wikimedia.org
    replyto-emails: analytics-alerts@wikimedia.org

    jobs:
     - '{name}-maven-release-docker'
     - '{name}-maven-java8-docker'
